version: "3.5"

services:
  # Install jaeger
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1
    ports:
      - 6831:6831/udp
      - 16686:16686

  # Install postgres and setup database
  postgres:
    container_name: postgres
    image: debezium/postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=showcase
      - POSTGRES_USER=unexist
      - POSTGRES_PASSWORD=password

  # Install zookeeper
  zookeeper:
    container_name: zookeeper
    image: zookeeper
    ports:
      - 2181:2181

  # Install kafka and create needed topics
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    hostname: kafka
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # Install debezium-connect
  debezium-connect:
    container_name: debezium-connect
    image: unexist/connect
    hostname: debezium-connect
    ports:
      - '8083:8083'
    environment:
      - KAFKA_LOG4J_OPTS=-Dlog4j.configuration=file:/opt/kafka/config/connect-log4j.properties
      - KAFKA_CONNECT_BOOTSTRAP_SERVERS=kafka:29092
      - |
        KAFKA_CONNECT_CONFIGURATION=
        key.converter=org.apache.kafka.connect.json.JsonConverter
        value.converter=org.apache.kafka.connect.json.JsonConverter
        key.converter.schemas.enable=false
        value.converter.schemas.enable=false
        group.id=connect
        offset.storage.topic=connect-offsets
        offset.storage.replication.factor=1
        config.storage.topic=connect-configs
        config.storage.replication.factor=1
        status.storage.topic=connect-status
        status.storage.replication.factor=1
        consumer.interceptor.classes=io.opentracing.contrib.kafka.TracingConsumerInterceptor
        producer.interceptor.classes=io.opentracing.contrib.kafka.TracingProducerInterceptor
      - JAEGER_SERVICE_NAME=kafka-connect
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
      - STRIMZI_TRACING=jaeger
    command: /opt/kafka/kafka_connect_run.sh
    depends_on:
      - kafka
      - postgres
      - create-topics

  # Create topics
  create-topics:
    container_name: create-topics
    image: confluentinc/cp-kafka
    command: bash -c "kafka-topics --bootstrap-server kafka:29092 --create --topic todo_created --partitions 1 --replication-factor 1 --if-not-exists"
    depends_on:
      - kafka