version: "3.5"

services:
  # Install jaeger
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1
    ports:
      - 6831:6831/udp
      - 16686:16686

  # Install postgres and setup database
  postgres:
    container_name: postgres
    image: debezium/postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=showcase
      - POSTGRES_USER=unexist
      - POSTGRES_PASSWORD=password

  # Install zookeeper
  zookeeper:
    container_name: zookeeper
    image: zookeeper
    ports:
      - 2181:2181

  # Install kafka and create needed topics
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    hostname: kafka
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # Install debezium-connect
  debezium-connect:
    container_name: debezium-connect
    image: connect-tracing
    hostname: debezium-connect
    ports:
      - '8083:8083'
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_config
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_status
      BOOTSTRAP_SERVERS: kafka:29092
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: io.debezium.converters.CloudEventsConverter
      VALUE_CONVERTER_SERIALIZER_TYPE: json
      VALUE_CONVERTER_AVRO_APICURIO_REGISTRY_URL: http://apicurio:8181
      VALUE_CONVERTER_DATA_SERIALIZER_TYPE: avro
      CONSUMER_INTERCEPTOR_CLASSES: io.opentracing.contrib.kafka.TracingConsumerInterceptor
      PRODUCER_INTERCEPTOR_CLASSES: io.opentracing.contrib.kafka.TracingProducerInterceptor
      JAEGER_SERVICE_NAME: kafka-connect
      JAEGER_AGENT_HOST: jaeger
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: 1
      STRIMZI_TRACING: jaeger
    depends_on:
      - kafka
      - postgres
      - create-topics

  # Create topics
  create-topics:
    container_name: create-topics
    image: confluentinc/cp-kafka
    command: bash -c "kafka-topics --bootstrap-server kafka:29092 --create --topic todo_created --partitions 1 --replication-factor 1 --if-not-exists"
    depends_on:
      - kafka
  apicurio:
    image: apicurio/apicurio-registry-sql:2.0.0.Final
    ports:
      - 8181:8181
    environment:
      QUARKUS_HTTP_PORT: 8181
      REGISTRY_DATASOURCE_URL: jdbc:postgresql://postgres:5432/showcase
      REGISTRY_DATASOURCE_USERNAME: unexist
      REGISTRY_DATASOURCE_PASSWORD: password
